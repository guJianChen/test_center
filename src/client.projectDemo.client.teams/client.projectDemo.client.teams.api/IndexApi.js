/**
 * testCenter
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DocumentModel from '../client.projectDemo.client.teams.model/DocumentModel';
import IndexModel from '../client.projectDemo.client.teams.model/IndexModel';

/**
* Index service.
* @module client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi
* @version 1.0.0
*/
export default class IndexApi {

    /**
    * Constructs a new IndexApi. 
    * @alias module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi
    * @class
    * @param {module:client.projectDemo.client.teams/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:client.projectDemo.client.teams/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteIndicesIndexName operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~deleteIndicesIndexNameCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 删除索引
     * @param {String} indexName 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [retainData] 是否保留index对doc的修改
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~deleteIndicesIndexNameCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteIndicesIndexName(indexName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'indexName' is set
      if (indexName === undefined || indexName === null) {
        throw new Error("Missing the required parameter 'indexName' when calling deleteIndicesIndexName");
      }

      let pathParams = {
        'indexName': indexName
      };
      let queryParams = {
        'retainData': opts['retainData']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indices/{indexName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getIndicesIndexName operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~getIndicesIndexNameCallback
     * @param {String} error Error message, if any.
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取index
     * @param {String} indexName 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~getIndicesIndexNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel}
     */
    getIndicesIndexName(indexName, callback) {
      let postBody = null;
      // verify the required parameter 'indexName' is set
      if (indexName === undefined || indexName === null) {
        throw new Error("Missing the required parameter 'indexName' when calling getIndicesIndexName");
      }

      let pathParams = {
        'indexName': indexName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IndexModel;
      return this.apiClient.callApi(
        '/indices/{indexName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getIndicesIndexNameDoc operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~getIndicesIndexNameDocCallback
     * @param {String} error Error message, if any.
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/DocumentModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取文档
     * @param {String} indexName 
     * @param {String} docId 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~getIndicesIndexNameDocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/DocumentModel}
     */
    getIndicesIndexNameDoc(indexName, docId, callback) {
      let postBody = null;
      // verify the required parameter 'indexName' is set
      if (indexName === undefined || indexName === null) {
        throw new Error("Missing the required parameter 'indexName' when calling getIndicesIndexNameDoc");
      }
      // verify the required parameter 'docId' is set
      if (docId === undefined || docId === null) {
        throw new Error("Missing the required parameter 'docId' when calling getIndicesIndexNameDoc");
      }

      let pathParams = {
        'indexName': indexName,
        'docId': docId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DocumentModel;
      return this.apiClient.callApi(
        '/indices/{indexName}/doc/{docId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getIndicesIndexNameSearch operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~getIndicesIndexNameSearchCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/DocumentModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 查询文档
     * @param {String} indexName 
     * @param {Object} opts Optional parameters
     * @param {Object.<String, Object>} [body] 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~getIndicesIndexNameSearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/DocumentModel>}
     */
    getIndicesIndexNameSearch(indexName, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'indexName' is set
      if (indexName === undefined || indexName === null) {
        throw new Error("Missing the required parameter 'indexName' when calling getIndicesIndexNameSearch");
      }

      let pathParams = {
        'indexName': indexName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [DocumentModel];
      return this.apiClient.callApi(
        '/indices/{indexName}/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postIndicesIndexName operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~postIndicesIndexNameCallback
     * @param {String} error Error message, if any.
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 更新index
     * @param {String} indexName 
     * @param {Object} opts Optional parameters
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel} [indexModel] 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~postIndicesIndexNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel}
     */
    postIndicesIndexName(indexName, opts, callback) {
      opts = opts || {};
      let postBody = opts['indexModel'];
      // verify the required parameter 'indexName' is set
      if (indexName === undefined || indexName === null) {
        throw new Error("Missing the required parameter 'indexName' when calling postIndicesIndexName");
      }

      let pathParams = {
        'indexName': indexName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = IndexModel;
      return this.apiClient.callApi(
        '/indices/{indexName}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postIndicesIndexNameActive operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~postIndicesIndexNameActiveCallback
     * @param {String} error Error message, if any.
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 激活Index，开始导入数据
     * 
     * @param {String} indexName 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~postIndicesIndexNameActiveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel}
     */
    postIndicesIndexNameActive(indexName, callback) {
      let postBody = null;
      // verify the required parameter 'indexName' is set
      if (indexName === undefined || indexName === null) {
        throw new Error("Missing the required parameter 'indexName' when calling postIndicesIndexNameActive");
      }

      let pathParams = {
        'indexName': indexName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IndexModel;
      return this.apiClient.callApi(
        '/indices/{indexName}/active', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postIndicesIndexNameAppend operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~postIndicesIndexNameAppendCallback
     * @param {String} error Error message, if any.
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 刷新并追加Index的数据
     * @param {String} indexName 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~postIndicesIndexNameAppendCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel}
     */
    postIndicesIndexNameAppend(indexName, callback) {
      let postBody = null;
      // verify the required parameter 'indexName' is set
      if (indexName === undefined || indexName === null) {
        throw new Error("Missing the required parameter 'indexName' when calling postIndicesIndexNameAppend");
      }

      let pathParams = {
        'indexName': indexName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IndexModel;
      return this.apiClient.callApi(
        '/indices/{indexName}/append', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putIndicesIndexName operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~putIndicesIndexNameCallback
     * @param {String} error Error message, if any.
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 添加index
     * 
     * @param {String} indexName 
     * @param {Object} opts Optional parameters
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel} [indexModel] 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~putIndicesIndexNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel}
     */
    putIndicesIndexName(indexName, opts, callback) {
      opts = opts || {};
      let postBody = opts['indexModel'];
      // verify the required parameter 'indexName' is set
      if (indexName === undefined || indexName === null) {
        throw new Error("Missing the required parameter 'indexName' when calling putIndicesIndexName");
      }

      let pathParams = {
        'indexName': indexName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = IndexModel;
      return this.apiClient.callApi(
        '/indices/{indexName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putIndicesIndexNameDocDocId operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~putIndicesIndexNameDocDocIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 更新文档
     * @param {String} indexName 
     * @param {String} docId 
     * @param {Object} opts Optional parameters
     * @param {Object.<String, Object>} [body] 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/IndexApi~putIndicesIndexNameDocDocIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    putIndicesIndexNameDocDocId(indexName, docId, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'indexName' is set
      if (indexName === undefined || indexName === null) {
        throw new Error("Missing the required parameter 'indexName' when calling putIndicesIndexNameDocDocId");
      }
      // verify the required parameter 'docId' is set
      if (docId === undefined || docId === null) {
        throw new Error("Missing the required parameter 'docId' when calling putIndicesIndexNameDocDocId");
      }

      let pathParams = {
        'indexName': indexName,
        'docId': docId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indices/{indexName}/doc/{docId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
