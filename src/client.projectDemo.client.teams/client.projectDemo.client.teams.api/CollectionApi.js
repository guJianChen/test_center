/**
 * testCenter
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CollectionModel from '../client.projectDemo.client.teams.model/CollectionModel';
import PropertyModel from '../client.projectDemo.client.teams.model/PropertyModel';

/**
* Collection service.
* @module client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi
* @version 1.0.0
*/
export default class CollectionApi {

    /**
    * Constructs a new CollectionApi. 
    * @alias module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi
    * @class
    * @param {module:client.projectDemo.client.teams/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:client.projectDemo.client.teams/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteCollectionsCollectionName operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~deleteCollectionsCollectionNameCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 删除Collection
     * @param {String} collectionName 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~deleteCollectionsCollectionNameCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCollectionsCollectionName(collectionName, callback) {
      let postBody = null;
      // verify the required parameter 'collectionName' is set
      if (collectionName === undefined || collectionName === null) {
        throw new Error("Missing the required parameter 'collectionName' when calling deleteCollectionsCollectionName");
      }

      let pathParams = {
        'collectionName': collectionName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/collections/{collectionName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCollections operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~getCollectionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取所有的数据集合
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~getCollectionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel>}
     */
    getCollections(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [CollectionModel];
      return this.apiClient.callApi(
        '/collections', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCollectionsCollectionName operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~getCollectionsCollectionNameCallback
     * @param {String} error Error message, if any.
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取Collection信息
     * @param {String} collectionName 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~getCollectionsCollectionNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel}
     */
    getCollectionsCollectionName(collectionName, callback) {
      let postBody = null;
      // verify the required parameter 'collectionName' is set
      if (collectionName === undefined || collectionName === null) {
        throw new Error("Missing the required parameter 'collectionName' when calling getCollectionsCollectionName");
      }

      let pathParams = {
        'collectionName': collectionName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CollectionModel;
      return this.apiClient.callApi(
        '/collections/{collectionName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCollectionsCollectionNameProperties operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~getCollectionsCollectionNamePropertiesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/PropertyModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 获取集合中记录所有的Property
     * @param {String} collectionName 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~getCollectionsCollectionNamePropertiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/PropertyModel>}
     */
    getCollectionsCollectionNameProperties(collectionName, callback) {
      let postBody = null;
      // verify the required parameter 'collectionName' is set
      if (collectionName === undefined || collectionName === null) {
        throw new Error("Missing the required parameter 'collectionName' when calling getCollectionsCollectionNameProperties");
      }

      let pathParams = {
        'collectionName': collectionName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PropertyModel];
      return this.apiClient.callApi(
        '/collections/{collectionName}/properties', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCollectionsCollectionNameUpload operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~postCollectionsCollectionNameUploadCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 上传excel文件
     * @param {String} collectionName 
     * @param {Object} opts Optional parameters
     * @param {File} [file] 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~postCollectionsCollectionNameUploadCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postCollectionsCollectionNameUpload(collectionName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'collectionName' is set
      if (collectionName === undefined || collectionName === null) {
        throw new Error("Missing the required parameter 'collectionName' when calling postCollectionsCollectionNameUpload");
      }

      let pathParams = {
        'collectionName': collectionName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': opts['file']
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/collections/{collectionName}/upload', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCollectionsDocs operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~postCollectionsDocsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 批量上传文档
     * @param {String} collectionName 
     * @param {Object} opts Optional parameters
     * @param {String} [batchId] 
     * @param {Array.<Object>} [requestBody] 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~postCollectionsDocsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postCollectionsDocs(collectionName, opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];
      // verify the required parameter 'collectionName' is set
      if (collectionName === undefined || collectionName === null) {
        throw new Error("Missing the required parameter 'collectionName' when calling postCollectionsDocs");
      }

      let pathParams = {
        'collectionName': collectionName
      };
      let queryParams = {
        'batchId': opts['batchId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/collections/{collectionName}/docs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putCollectionsCollectionName operation.
     * @callback module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~putCollectionsCollectionNameCallback
     * @param {String} error Error message, if any.
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 创建Collection
     * @param {String} collectionName 
     * @param {Object} opts Optional parameters
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel} [collectionModel] 
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.api/CollectionApi~putCollectionsCollectionNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel}
     */
    putCollectionsCollectionName(collectionName, opts, callback) {
      opts = opts || {};
      let postBody = opts['collectionModel'];
      // verify the required parameter 'collectionName' is set
      if (collectionName === undefined || collectionName === null) {
        throw new Error("Missing the required parameter 'collectionName' when calling putCollectionsCollectionName");
      }

      let pathParams = {
        'collectionName': collectionName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CollectionModel;
      return this.apiClient.callApi(
        '/collections/{collectionName}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
