/**
 * testCenter
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IndexModel from './IndexModel';

/**
 * The CollectionModel model module.
 * @module client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel
 * @version 1.0.0
 */
class CollectionModel {
    /**
     * Constructs a new <code>CollectionModel</code>.
     * @alias module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel
     */
    constructor() { 
        
        CollectionModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CollectionModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel} obj Optional instance to populate.
     * @return {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/CollectionModel} The populated <code>CollectionModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CollectionModel();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('desc')) {
                obj['desc'] = ApiClient.convertToType(data['desc'], 'String');
            }
            if (data.hasOwnProperty('indices')) {
                obj['indices'] = ApiClient.convertToType(data['indices'], [IndexModel]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CollectionModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CollectionModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['desc'] && !(typeof data['desc'] === 'string' || data['desc'] instanceof String)) {
            throw new Error("Expected the field `desc` to be a primitive type in the JSON string but got " + data['desc']);
        }
        if (data['indices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['indices'])) {
                throw new Error("Expected the field `indices` to be an array in the JSON data but got " + data['indices']);
            }
            // validate the optional field `indices` (array)
            for (const item of data['indices']) {
                IndexModel.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
CollectionModel.prototype['id'] = undefined;

/**
 * @member {String} name
 */
CollectionModel.prototype['name'] = undefined;

/**
 * @member {String} desc
 */
CollectionModel.prototype['desc'] = undefined;

/**
 * @member {Array.<module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/IndexModel>} indices
 */
CollectionModel.prototype['indices'] = undefined;






export default CollectionModel;

