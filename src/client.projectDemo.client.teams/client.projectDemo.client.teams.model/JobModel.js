/**
 * testCenter
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobModel model module.
 * @module client.projectDemo.client.teams/client.projectDemo.client.teams.model/JobModel
 * @version 1.0.0
 */
class JobModel {
    /**
     * Constructs a new <code>JobModel</code>.
     * @alias module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/JobModel
     */
    constructor() { 
        
        JobModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/JobModel} obj Optional instance to populate.
     * @return {module:client.projectDemo.client.teams/client.projectDemo.client.teams.model/JobModel} The populated <code>JobModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobModel();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('jobType')) {
                obj['jobType'] = ApiClient.convertToType(data['jobType'], 'String');
            }
            if (data.hasOwnProperty('jobStatus')) {
                obj['jobStatus'] = ApiClient.convertToType(data['jobStatus'], 'String');
            }
            if (data.hasOwnProperty('createAt')) {
                obj['createAt'] = ApiClient.convertToType(data['createAt'], 'String');
            }
            if (data.hasOwnProperty('updateAt')) {
                obj['updateAt'] = ApiClient.convertToType(data['updateAt'], 'String');
            }
            if (data.hasOwnProperty('relateId')) {
                obj['relateId'] = ApiClient.convertToType(data['relateId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['jobType'] && !(typeof data['jobType'] === 'string' || data['jobType'] instanceof String)) {
            throw new Error("Expected the field `jobType` to be a primitive type in the JSON string but got " + data['jobType']);
        }
        // ensure the json data is a string
        if (data['jobStatus'] && !(typeof data['jobStatus'] === 'string' || data['jobStatus'] instanceof String)) {
            throw new Error("Expected the field `jobStatus` to be a primitive type in the JSON string but got " + data['jobStatus']);
        }
        // ensure the json data is a string
        if (data['createAt'] && !(typeof data['createAt'] === 'string' || data['createAt'] instanceof String)) {
            throw new Error("Expected the field `createAt` to be a primitive type in the JSON string but got " + data['createAt']);
        }
        // ensure the json data is a string
        if (data['updateAt'] && !(typeof data['updateAt'] === 'string' || data['updateAt'] instanceof String)) {
            throw new Error("Expected the field `updateAt` to be a primitive type in the JSON string but got " + data['updateAt']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
JobModel.prototype['id'] = undefined;

/**
 * @member {String} jobType
 */
JobModel.prototype['jobType'] = undefined;

/**
 * @member {String} jobStatus
 */
JobModel.prototype['jobStatus'] = undefined;

/**
 * @member {String} createAt
 */
JobModel.prototype['createAt'] = undefined;

/**
 * @member {String} updateAt
 */
JobModel.prototype['updateAt'] = undefined;

/**
 * @member {Number} relateId
 */
JobModel.prototype['relateId'] = undefined;






export default JobModel;

